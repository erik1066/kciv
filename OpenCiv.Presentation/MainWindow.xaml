<Window x:Class="OpenCiv.Presentation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OpenCiv.Presentation"
        xmlns:engine="clr-namespace:OpenCiv.Engine;assembly=OpenCiv.Engine"
        xmlns:converters="clr-namespace:OpenCiv.Engine.Converters;assembly=OpenCiv.Engine"
        xmlns:imaging="clr-namespace:OpenCiv.Presentation.Media.Imaging"
        xmlns:behaviors="clr-namespace:OpenCiv.Presentation.Behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="750" Width="1224">
    <Window.DataContext>
        <engine:Engine />
    </Window.DataContext>
    <Grid 
        MouseMove="Grid_MouseMove"
        MouseLeftButtonUp="Grid_MouseLeftButtonUp"
        MouseRightButtonUp="Grid_MouseRightButtonUp">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid 
            Grid.Column="1" 
            Grid.Row="2"            
            >

            <Border BorderBrush="Black" BorderThickness="1, 0, 0, 0" Padding="12">
                <StackPanel Width="280">
                    <!--<TextBlock FontSize="24" FontWeight="Bold">City Management</TextBlock>
                    <StackPanel Margin="0,4,0,12" HorizontalAlignment="Left" Height="8" Width="128" Background="CornflowerBlue"></StackPanel>-->

                    <TextBlock>Select a city to manage:</TextBlock>
                    <ComboBox 
                        Margin="0, 0, 0, 4"
                        DataContext="{Binding PlayerCivilization}" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding CitiesView}">

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}"></TextBlock>
                                    <TextBlock Text=" : " />
                                    <TextBlock Text="{Binding Size}"></TextBlock>
                                </StackPanel>
                            </DataTemplate>

                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <StackPanel Height="20" />
                    <TextBlock FontWeight="Bold" FontSize="20" Text="{Binding PlayerCivilization.CitiesView.CurrentItem.Name}" />
                    <StackPanel Height="5" />

                    <Border
                        DataContext="{Binding PlayerCivilization}"
                                    BorderThickness="1" 
                                    BorderBrush="Black" 
                                    Background="Black"
                                    Width="260" 
                                    Height="15" 
                                    VerticalAlignment="Top" 
                        HorizontalAlignment="Left"
                                    Margin="0, 0, 0, 0" >
                        <Border 
                                        BorderThickness="0" 
                                        HorizontalAlignment="Left" 
                                        Background="{Binding CitiesView.CurrentItem.PercentRemainingHitPoints, Converter={StaticResource CityHitPointToColorConverter}}" 
                                        Width="{Binding CitiesView.CurrentItem.PercentRemainingHitPoints, Converter={StaticResource CityHitPointToWidthConverter}, ConverterParameter=260.0}" />
                    </Border>

                    <StackPanel Height="20" />
                    
                    <TextBlock FontWeight="Bold">Outputs:</TextBlock>
                    <Grid DataContext="{Binding PlayerCivilization}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0">Production:</TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="0">Gold:</TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="0">Food:</TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="0">Science:</TextBlock>

                        <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding CitiesView.CurrentItem.ProductionPerTurn, FallbackValue=0}" />
                        <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding CitiesView.CurrentItem.GoldPerTurn, FallbackValue=0}" />
                        <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding CitiesView.CurrentItem.FoodPerTurn, FallbackValue=0}" />
                        <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding CitiesView.CurrentItem.SciencePerTurn, FallbackValue=0}" />
                        
                    </Grid>

                    <StackPanel Height="20" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Select a unit to build in " />
                        <TextBlock Text="{Binding PlayerCivilization.CitiesView.CurrentItem.Name}" />
                    </StackPanel>

                    <ComboBox 
                        MaxDropDownHeight="800"
                        Margin="0, 0, 0, 4"
                        DataContext="{Binding PlayerCivilization.CitiesView.CurrentItem}" 
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding ConstructableUnitsViewLive}">

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Name}"></TextBlock>
                                        <TextBlock FontWeight="Bold" FontSize="14" Text=" : " />
                                        <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Cost}"></TextBlock>
                                    </StackPanel>

                                    <StackPanel Margin="0, 10, 0, 0" Orientation="Horizontal" Visibility="{Binding ShowDetails, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        
                                        <Image Source="{Binding Type, Converter={StaticResource UnitToSourceConverter}}" />

                                        <Grid Margin="12, 0, 0, 12">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="8" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            
                                            <!-- row headers -->
                                            <TextBlock 
                                                Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}"
                                                Grid.Row="0">Combat power:</TextBlock>

                                            <TextBlock 
                                                Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}, ConverterParameter='True'}"  
                                                Grid.Row="1">Ranged power:</TextBlock>

                                            <TextBlock 
                                                Grid.Row="2">Max moves:</TextBlock>
                                            
                                            <TextBlock 
                                                Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}"
                                                Grid.Row="3">Attack method:</TextBlock>
                                            
                                            <TextBlock Grid.Row="4" 
                                                       Margin="0, 4, 0, 0" 
                                                       FontSize="9" 
                                                       Visibility="{Binding Bonuses, Converter={StaticResource EmptyStringToVisibilityConverter}}">Bonuses:</TextBlock>


                                            <!-- desc -->
                                            <TextBlock Grid.Row="0" Grid.Column="2" 
                                                       Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}"
                                                       Text="{Binding CombatPower}" />

                                            <TextBlock Grid.Row="1" Grid.Column="2" 
                                                       Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}, ConverterParameter='True'}"
                                                       Text="{Binding RangedPower}" />

                                            <TextBlock Grid.Row="2" Grid.Column="2" 
                                                       Text="{Binding MaxMoves}" />
                                            
                                            <TextBlock Grid.Row="3" Grid.Column="2" 
                                                       Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}"
                                                       Text="{Binding AttackMethod}" />
                                            
                                            <TextBlock Grid.Row="4" Grid.Column="2"                                                        
                                                       FontSize="9" 
                                                       Text="{Binding Bonuses}"
                                                       Visibility="{Binding Bonuses, Converter={StaticResource EmptyStringToVisibilityConverter}}"
                                                       Margin="0, 0, 0, 0" />
                                        </Grid>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>

                        </ComboBox.ItemTemplate>
                        
                    </ComboBox>
                    



                    <StackPanel Height="20" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Select a structure to build in " />
                        <TextBlock Text="{Binding PlayerCivilization.CitiesView.CurrentItem.Name}" />
                    </StackPanel>

                    <ComboBox 
                        MaxDropDownHeight="600"
                        Margin="0, 0, 0, 4"
                        DataContext="{Binding PlayerCivilization.CitiesView.CurrentItem}" 
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding ConstructableBuildingsView}">

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Name}"></TextBlock>
                                        <TextBlock FontWeight="Bold" FontSize="14" Text=" : " />
                                        <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Cost}"></TextBlock>
                                    </StackPanel>

                                    <StackPanel Margin="0, 0, 0, 2" Orientation="Horizontal" Visibility="{Binding ShowDetails, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBlock Text="{Binding Description}" />
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>

                        </ComboBox.ItemTemplate>

                    </ComboBox>

                    <StackPanel Height="20" />

                    <TextBlock Text="Buildings:" />
                    <ListBox 
                        DataContext="{Binding PlayerCivilization.CitiesView.CurrentItem}"
                        ItemsSource="{Binding Buildings}"
                        IsEnabled="False" 
                        Height="200">                        
                    </ListBox>


                </StackPanel>
            </Border>
            
        </Grid>

        <Grid Grid.Row="0" Height="0" Background="BlueViolet" Margin="0,0,0,42" Grid.RowSpan="3">

        </Grid>
        
        <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
            <Grid HorizontalAlignment="Left" Width="3000" Height="1300" >
                <Grid.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding ElementName=zoomSlider, Path=Value, Mode=TwoWay}" ScaleY="{Binding ElementName=zoomSlider, Path=Value, Mode=TwoWay}" >
                    </ScaleTransform>
                </Grid.LayoutTransform>

                <ItemsControl x:Name="test" HorizontalAlignment="Left" VerticalAlignment="Top" DataContext="{Binding World, Mode=OneTime}" ItemsSource="{Binding Path=StaticTiles, Mode=OneTime}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Width="3000" Height="1300" Background="Black" Visibility="Visible"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Coordinates, Mode=OneTime, Converter={StaticResource LeftConverter}}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Coordinates, Mode=OneTime, Converter={StaticResource TopConverter}}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!--<Grid>-->
                            <Image Stretch="Uniform" Width="40" Height="40">
                                <Image.Source>
                                    <imaging:ColorKeyBitmap x:Name="f" Source="{Binding Mode=OneTime, Converter={StaticResource TerrainToSourceConverter}}"></imaging:ColorKeyBitmap>
                                </Image.Source>
                            </Image>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ListView 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Top" 
                    Margin="-7, -4, 0, 0" 
                    Padding="0" 
                    IsSynchronizedWithCurrentItem="True" 
                    Background="Transparent" 
                    DataContext="{Binding World}" 
                    ItemsSource="{Binding Path=TilesViewLive}">

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Width="3000" Height="1300" Background="Transparent" IsHitTestVisible="True"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Canvas.Left" Value="{Binding Coordinates, Mode=OneWay, Converter={StaticResource LeftConverter}}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Coordinates, Mode=OneWay, Converter={StaticResource TopConverter}}"/>
                            <Setter Property="IsHitTestVisible" Value="{Binding HasCity}"/>
                            <Setter Property="Clip">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="16,0" IsClosed="True">
                                            <PolyLineSegment Points="16,2 6,21 6,23 16,42 35,42 45,23 45,21 35,2 16,2">

                                            </PolyLineSegment>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid 
                                x:Name="grid"
                                Width="40" 
                                Height="40"
                                >

                                <StackPanel 
                                    Visibility="{Binding Converter={StaticResource CityToVisibilityConverter}}"
                                    TextBlock.TextAlignment="Center"
                                    Width="40" 
                                    Height="40" 
                                    Background="{Binding Converter={StaticResource CityAllegianceToSourceConverter}}">

                                    <TextBlock FontSize="10" Margin="0, 10, 0, 0" Foreground="White" Text="{Binding City.Name}" />

                                    <TextBlock Foreground="White" 
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Bottom" 
                                               FontSize="12" 
                                               Text="{Binding City.Size}">
                                    </TextBlock>
                                    

                                </StackPanel>

                                <!-- improvements -->
                                <Image Stretch="Fill" Width="40" Height="40"
                                       Visibility="{Binding Path=Improvement, Converter={StaticResource ImprovementToVisibilityConverter}}"
                                       Source="{Binding Path=Improvement, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ImprovementToSourceConverter}}">                                    
                                </Image>

                                <!-- roads -->
                                <Image Stretch="Fill" Width="40" Height="40"
                                       Visibility="{Binding Path=HasRoad, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Source="{Binding Path=RoadConnections, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RoadToSourceConverter}}">
                                </Image>

                                <Image Stretch="Fill" Width="40" Height="40"
                                       Visibility="{Binding Path=HasRoad, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Source="{Binding Path=RoadConnections, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RoadAltToSourceConverter}}">
                                </Image>

                                <!-- resources -->
                                <Image Stretch="Fill" Width="40" Height="40"
                                       Visibility="{Binding Path=Resource, Converter={StaticResource ResourceToVisibilityConverter}}"
                                       Source="{Binding Path=Resource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ResourceToSourceConverter}}">
                                </Image>

                                <!-- cities -->
                                <Image Stretch="Fill" Width="40" Height="40" Visibility="{Binding Converter={StaticResource CityToVisibilityConverter}}"
                                        Source="{Binding Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CityWallsToSourceConverter}}" />

                                <Border
                                    Visibility="{Binding Converter={StaticResource CityToVisibilityConverter}}"
                                    BorderThickness="1" 
                                    BorderBrush="Black" 
                                    Background="Black"
                                    Width="15" 
                                    Height="5" 
                                    VerticalAlignment="Top" 
                                    Margin="0, 2, 0, 0" >
                                    <Border 
                                        BorderThickness="0" 
                                        HorizontalAlignment="Left" 
                                        Background="{Binding City.PercentRemainingHitPoints, Converter={StaticResource CityHitPointToColorConverter}}" 
                                        Width="{Binding City.PercentRemainingHitPoints, Converter={StaticResource CityHitPointToWidthConverter}, ConverterParameter=15.0}" />
                                </Border>

                                <Image Stretch="Fill" Width="40" Height="40"
                                        Source="{Binding IsInRange, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RangedAttackToSourceConverter}}"
                                       Visibility="{Binding IsInRange, Converter={StaticResource BooleanToVisibilityConverter}}">
                                </Image>

                            </Grid>

                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                
                <ListView 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Top" 
                    Margin="-7, -4, 0, 0" 
                    Padding="0" 
                    IsSynchronizedWithCurrentItem="True" 
                    SelectionChanged="ListView_SelectionChanged"
                    Background="Transparent" 
                    DataContext="{Binding World}" 
                    ItemsSource="{Binding Path=TilesViewLive}">
                    
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Width="3000" Height="1300" Background="Transparent" IsHitTestVisible="True"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Canvas.Left" Value="{Binding Coordinates, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource LeftConverter}}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Coordinates, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TopConverter}}"/>
                            <Setter Property="IsHitTestVisible" Value="{Binding HasPlayerUnit}"/>
                            <Setter Property="Clip">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="16,0" IsClosed="True">
                                            <PolyLineSegment Points="16,2 6,21 6,23 16,42 35,42 45,23 45,21 35,2 16,2" />
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>

                            <!--<Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="blink">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" From="1.0" To="0.4" 
                                                    Duration="0:0:1" BeginTime="0:0:0"/>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" From="0.4" To="1.0" 
                                                    Duration="0:0:1" BeginTime="0:0:1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="blink"></StopStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                            </Style.Triggers>-->
                            
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid 
                                x:Name="grid"
                                DataContext="{Binding CurrentUnit}"
                                Visibility="{Binding Converter={StaticResource UnitToVisibilityConverter}}"
                                Width="40" 
                                Height="40">

                                <Border Background="{Binding OwnerName, Converter={StaticResource UnitAllegianceToBrushConverter}}" Margin="0" Padding="0" BorderThickness="0" Opacity="0.6">
                                    <Border.Clip>
                                        <PathGeometry>
                                            <PathFigure StartPoint="10,1" IsClosed="True">
                                                <PolyLineSegment Points="10,1 1,19 1,20 10,39 29,39 39,20 39,19 29,1 10,1" />
                                            </PathFigure>
                                        </PathGeometry>
                                    </Border.Clip>
                                </Border>

                                <Image 
                                    x:Name="selectionActiveCircle" 
                                    Stretch="Uniform" 
                                    Width="36" 
                                    Height="36"
                                    Visibility="{Binding
                    RelativeSource={RelativeSource
                        Mode=FindAncestor,
                        AncestorType={x:Type ListViewItem}},
                        Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Source="/units/selection-active.png">

                                    <Image.RenderTransform>
                                        <RotateTransform x:Name="TransRotate"
                           CenterX="18" CenterY="18" Angle="0" />
                                    </Image.RenderTransform>
                                    <Image.Triggers>
                                        <EventTrigger RoutedEvent="Window.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard >
                                                    <DoubleAnimation x:Name="da" 
                             Storyboard.TargetName="TransRotate" 
                             Storyboard.TargetProperty="Angle"
                             By="360" 
                             Duration="0:0:10"  
                             AutoReverse="False" 
                             RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Image.Triggers>

                                </Image>

                                <Image Stretch="Uniform" Width="40" Height="40" Opacity="0.5" Source="{Binding Path=Status, Mode=OneWay, Converter={StaticResource UnitStatusToSourceConverter}}" />

                                <Image Stretch="Uniform" 
                                       Width="50" 
                                       Height="50"
                                       Margin="-5, -10, 0, 0"
                                       Source="{Binding Path=Type, Mode=OneWay, Converter={StaticResource UnitToSourceConverter}}" />

                                <Border 
                                    Margin="9, 0, 0, 4"
                                    VerticalAlignment="Bottom" 
                                    HorizontalAlignment="Left" 
                                    Padding="2, 0, 2, 0"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    Background="#333333"
                                    Visibility="{Binding Path=PromotionCount, Mode=OneWay, Converter={StaticResource GreaterThanZeroToVisibilityConverter}}">
                                    <TextBlock 
                                        Text="{Binding Path=PromotionCount, Mode=OneWay}" 
                                        FontSize="7" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="White"
                                        FontWeight="Bold">
                                    </TextBlock>
                                </Border>
                                
                                <Border 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" 
                                    MaxHeight="17"
                                    MaxWidth="14"
                                    Margin="0, -1, 0, 0"
                                    BorderBrush="Tomato"
                                    BorderThickness="1"
                                    Background="Black"
                                    Visibility="{Binding Path=Status, Mode=OneWay, Converter={StaticResource UnitStatusToVisibilityConverter}}">
                                    <TextBlock 
                                        Text="{Binding Path=Status, Mode=OneWay, Converter={StaticResource UnitStatusToCharConverter}}" 
                                        FontSize="11" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="White"
                                        Margin="2, 0, 2, 0"
                                        FontWeight="Bold">
                                    </TextBlock>
                                </Border>
                                <Border BorderThickness="1" BorderBrush="Black" Width="15" Height="5" VerticalAlignment="Top" Margin="0, 2, 0, 0" >
                                    <Border BorderThickness="0" HorizontalAlignment="Left" Background="{Binding HitPoints, Converter={StaticResource HitPointToColorConverter}}" Width="{Binding HitPoints, Converter={StaticResource HitPointToHeightConverter}, ConverterParameter=15.0}" />
                                </Border>

                                

                                <Grid.ToolTip>
                                    <StackPanel>
                                        <TextBlock FontWeight="Bold" FontSize="16" Margin="0,0,0,0" Text="{Binding Path=Type}"/>
                                        <TextBlock Text="{Binding Owner.Name}" />
                                        <TextBlock FontWeight="Regular" FontSize="14" Margin="0,0,0,0" Text="{Binding Path=Terrain}"/>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Combat Power:" Margin="0, 0, 10, 0" />
                                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Hit Points:" Margin="0, 0, 10, 0" />
                                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Kills:" Margin="0, 0, 10, 0" />

                                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                                                <TextBlock Text="{Binding CombatPower}" />    
                                            </StackPanel>
                                            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                                                <TextBlock Text="{Binding HitPoints}" />           
                                            </StackPanel>

                                            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                                                <TextBlock Text="{Binding Kills}" />
                                            </StackPanel>

                                        </Grid>
                                        <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
                                        <WrapPanel>
                                            <TextBlock FontStyle="Italic">Press F1 for more help</TextBlock>
                                        </WrapPanel>
                                    </StackPanel>
                                </Grid.ToolTip>
                                
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </ScrollViewer>

        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="181,0,181,22" HorizontalAlignment="Center" VerticalAlignment="Bottom">
            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding FortifySelectedUnitCommand}" Visibility="{Binding CanFortify, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Fortify</Button>

            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding ActivateSelectedUnitCommand}" Visibility="{Binding CanActivate, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Activate</Button>

            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding FoundCitySelectedUnitCommand}" Visibility="{Binding CanFoundCity, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Found city</Button>

            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding BuildRoadSelectedUnitCommand}" Visibility="{Binding CanBuildRoad, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Build road</Button>
            
            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding BuildFarmSelectedUnitCommand}" Visibility="{Binding CanBuildFarm, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Build farm</Button>
            
            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding BuildMineSelectedUnitCommand}" Visibility="{Binding CanBuildMine, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Build mine</Button>

            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding BuildFortressSelectedUnitCommand}" Visibility="{Binding CanBuildFortress, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Build fortress</Button>

            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding RangedAttackSelectedUnitCommand}" Visibility="{Binding CanRangedAttack, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Ranged attack</Button>
            
            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding BombardAttackSelectedUnitCommand}" Visibility="{Binding CanBombard, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Bombard</Button>

            <!--<Button Style="{StaticResource actionButtonStyle}" Command="{Binding FirebombSelectedUnitCommand}" Visibility="{Binding CanFireBombard, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Bombard (firebombs)</Button>

            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding PlagueBodiesSelectedUnitCommand}" Visibility="{Binding CanPlagueBombard, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Bombard (plague bodies)</Button>-->

            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding UpgradeSelectedUnitCommand}" Visibility="{Binding CanUpgrade, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Upgrade</Button>

            <Button Style="{StaticResource actionButtonStyle}" Command="{Binding DisbandSelectedUnitCommand}" Visibility="{Binding CanDisband, Converter={StaticResource BooleanToVisibilityConverter}}" >
                Disband</Button>

            

            <!--<Border Background="OldLace">
            <Border Margin="5" BorderBrush="Black" BorderThickness="2" Width="100" Height="25" CornerRadius="5">

                <Border.Background>
                    <RadialGradientBrush GradientOrigin="0.5,0.5"
                        Center="0.5,0.5" 
                        RadiusX="0.8" RadiusY="0.8">
                        <RadialGradientBrush.GradientStops>
                            <GradientStop Color="White" Offset="0.0"/>
                            <GradientStop Color="LightBlue" Offset="0.5"/>
                            <GradientStop Color="DarkBlue" Offset="1.0"/>
                        </RadialGradientBrush.GradientStops>
                    </RadialGradientBrush>
                </Border.Background>
                
                <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Fortify">
                        <TextBlock.Effect>
                            <DropShadowEffect
                                                ShadowDepth="2"
                                                Direction="330"
                                                Color="Black"
                                                Opacity="0.5"
                                               BlurRadius="3"/>
                        </TextBlock.Effect>
                    </TextBlock>
                
            </Border>
            </Border>-->
        </StackPanel>

        <Border 
            Visibility="Visible"
            Grid.Row="2" 
            BorderBrush="Gray" 
            BorderThickness="1" 
            Width="500" 
            Height="200"
            MaxHeight="{Binding ElementName=messageToggle, Path=IsChecked, Converter={StaticResource BooleanToHeightConverter}}" 
            HorizontalAlignment="Center" 
            Margin="4,4,0,0" 
            VerticalAlignment="Top" Grid.RowSpan="2">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.Background>
                    <SolidColorBrush>
                        <SolidColorBrush.Color>
                            <Color R="0" G="0" B="0" A="168" />
                        </SolidColorBrush.Color>
                    </SolidColorBrush>
                </Grid.Background>

                <ListBox 
                    x:Name="messageBox"
                    DataContext="{Binding StatusMessages, Mode=OneWay}" 
                    Grid.Row="0" 
                    behaviors:ListBoxBehavior.ScrollOnNewItem="True"
                    ItemsSource="{Binding}" 
                    Visibility="{Binding ElementName=messageTypeToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=False, FallbackValue=Visible}" 
                    Background="Transparent">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                                Foreground="{Binding Type, Converter={StaticResource StatusMessageTypeToColorConverter}}"
                                Text="{Binding Message, Mode=OneWay}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <ListBox 
                    x:Name="nodeMessageBox"
                    DataContext="{Binding NodeMessages, Mode=OneWay}" 
                    Grid.Row="0" 
                    behaviors:ListBoxBehavior.ScrollOnNewItem="True"
                    ItemsSource="{Binding}" 
                    Visibility="{Binding ElementName=messageTypeToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True, FallbackValue=Visible}" 
                    Background="Transparent">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0" Orientation="Horizontal">
                                    <TextBlock 
                                        Foreground="{Binding Type, Converter={StaticResource NodeMessageTypeToColorConverter}}"
                                        Text="{Binding NodeId}" />
                                    <TextBlock Text=":" />
                                </StackPanel>

                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <TextBlock Text="[" />
                                    <TextBlock 
                                        Foreground="{Binding Type, Converter={StaticResource NodeMessageTypeToColorConverter}}"
                                        Text="{Binding Addr16}" />
                                    <TextBlock Text="]" />
                                </StackPanel>

                                <TextBlock 
                                    Grid.Column="6"
                                    Foreground="{Binding Type, Converter={StaticResource NodeMessageTypeToColorConverter}}"
                                    Text="{Binding Message, Mode=OneWay}"/>

                                <TextBlock 
                                    Grid.Column="4"
                                    Foreground="{Binding Type, Converter={StaticResource NodeMessageTypeToColorConverter}}"
                                    Text="{Binding Type, Mode=OneWay}"/>

                            </Grid>
                            
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <Border Grid.Row="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Padding="4,2,4,2" Command="{Binding DoTurnCommand}">Turn Complete</Button>
                        <ToggleButton Grid.Column="1" IsChecked="True" Padding="4,2,4,2" Content="Show/Hide" x:Name="messageToggle" />
                        <ToggleButton Grid.Column="2" IsChecked="True" Padding="4,2,4,2" Content="G/N" x:Name="messageTypeToggle" />
                    </Grid>                    
                </Border>
            </Grid>
        </Border>

        <!-- bad guy unit -->
        <Border Grid.Row="2" 
                BorderBrush="Gray" 
                BorderThickness="1" 
                Width="260" Height="210" 
                HorizontalAlignment="Right" 
                Margin="0,0,290,22" 
                VerticalAlignment="Bottom" 
                DataContext="{Binding UnitAttackVM}"
                 Visibility="{Binding Path=IsShowing, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <SolidColorBrush>
                        <SolidColorBrush.Color>
                            <Color R="0" G="0" B="0" A="128" />
                        </SolidColorBrush.Color>
                    </SolidColorBrush>
                </Grid.Background>

                <Border Grid.Column="1" Grid.RowSpan="5" BorderBrush="Black" BorderThickness="1">
                    <Grid>
                        <!--<StackPanel Background="ForestGreen" VerticalAlignment="Bottom" Height="120" Width="10" />-->
                        <StackPanel Background="{Binding HitPoints, Converter={StaticResource HitPointToColorConverter}, FallbackValue='Transparent'}" 
                                    VerticalAlignment="Bottom" 
                                    Height="{Binding HitPoints, Converter={StaticResource HitPointToHeightConverter}, FallbackValue='0'}" 
                                    Width="10" />

                        <StackPanel Background="Black" Opacity="0.5" VerticalAlignment="Top" Width="10"
                                    Height="{Binding DefenderHitPointLoss, Converter={StaticResource HitPointToHeightConverter}, FallbackValue='0'}" >
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Visibility" Value="Visible" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard x:Name="blink">
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" From="0.7" To="0.4" 
                                                    Duration="0:0:2" BeginTime="0:0:0"/>
                                                        <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" From="0.4" To="0.7" 
                                                    Duration="0:0:2" BeginTime="0:0:2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="blink"></StopStoryboard>
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </Grid>
                </Border>

                <StackPanel Margin="8" Grid.Column="0">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Image 
                            DataContext="{Binding}"
                            Grid.Column="2"
                            Width="64"
                            Height="64"
                            Source="{Binding Type, Converter={StaticResource UnitToSourceConverter}}" />

                        <!--<Border 
                            DataContext="{Binding CurrentUnit}"
                            Visibility="{Binding PromotionCount, Converter={StaticResource GreaterThanZeroToVisibilityConverter}, FallbackValue=Collapsed}"
                            Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0, 0, 5, 0" BorderBrush="WhiteSmoke" BorderThickness="1" Background="Black" Padding="3, 1, 3, 1">
                            <TextBlock Foreground="WhiteSmoke" Text="{Binding PromotionCount}" />
                            <Border.ToolTip>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold" FontSize="16" Margin="0, 0, 0, 6">Promotions:</TextBlock>
                                    <ItemsControl
                                    ItemsSource="{Binding Promotions}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="0, 0, 0, 4">
                                                    <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding}" />
                                                    <TextBlock Text="{Binding Converter={StaticResource PromotionToDescriptionConverter}}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Border.ToolTip>
                        </Border>-->

                        <StackPanel Grid.Column="0">
                            <TextBlock FontSize="20" Foreground="WhiteSmoke" DataContext="{Binding}" Text="{Binding Type}" />
                            <TextBlock Foreground="WhiteSmoke" DataContext="{Binding}" Text="{Binding OwnerName}"/>
                            <TextBlock Foreground="WhiteSmoke" Text="{Binding Terrain}" />
                            <TextBlock Foreground="WhiteSmoke" Text="{Binding Improvement}" />
                        </StackPanel>
                    </Grid>

                    <StackPanel Height="10" />

                    <Grid DataContext="{Binding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}"  
                                   Grid.Row="0" Grid.Column="0" FontSize="16" Foreground="WhiteSmoke" Margin="0, 0, 5, 0">Combat Power:</TextBlock>

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}, ConverterParameter='True'}"  
                                   Grid.Row="1" Grid.Column="0" FontSize="16" Foreground="WhiteSmoke" Margin="0, 0, 5, 0">Ranged Power:</TextBlock>

                        <!--<TextBlock Visibility="Visible"
                                   Grid.Row="2" Grid.Column="0" FontSize="16" Foreground="WhiteSmoke" Margin="0, 0, 5, 0">Moves:</TextBlock>

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}" 
                                   Grid.Row="3" Grid.Column="0" FontSize="16" Foreground="WhiteSmoke" Margin="0, 0, 5, 0">Kills:</TextBlock>-->

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}" 
                                   Grid.Row="0" Grid.Column="2" FontSize="16" Foreground="WhiteSmoke" Text="{Binding CombatPower}" />

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}, ConverterParameter='True'}" 
                                   Grid.Row="1" Grid.Column="2" FontSize="16" Foreground="WhiteSmoke" Text="{Binding RangedPower}" />

                        <!--<TextBlock 
                                   Grid.Row="2" Grid.Column="2" FontSize="16" Foreground="{Binding RemainingMoves, Converter={StaticResource MovesToColorConverter}}" Text="{Binding RemainingMoves}" />

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}" 
                                   Grid.Row="3" Grid.Column="2" FontSize="16" Foreground="WhiteSmoke" Text="{Binding Kills}" />-->

                    </Grid>
                </StackPanel>
            </Grid>
        </Border>

        <!-- player unit status -->
        <Border 
            Grid.Row="2" 
            BorderBrush="Gray" 
            BorderThickness="1" 
            Width="260" 
            Height="210" 
            HorizontalAlignment="Right" 
            Margin="0,0,22,22" 
            VerticalAlignment="Bottom" 
            Visibility="Visible">
            
            <Grid DataContext="{Binding World.TilesViewLive/}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <SolidColorBrush>
                        <SolidColorBrush.Color>
                            <Color R="0" G="0" B="0" A="128" />
                        </SolidColorBrush.Color>
                    </SolidColorBrush>
                </Grid.Background>

                <Border Grid.Column="0" Grid.RowSpan="5" BorderBrush="Black" BorderThickness="1">
                    <Grid>
                        <!--<StackPanel Background="ForestGreen" VerticalAlignment="Bottom" Height="120" Width="10" />-->
                        <StackPanel Background="{Binding CurrentUnit.HitPoints, Converter={StaticResource HitPointToColorConverter}, FallbackValue='Transparent'}" 
                                    VerticalAlignment="Bottom" 
                                    Height="{Binding CurrentUnit.HitPoints, Converter={StaticResource HitPointToHeightConverter}, FallbackValue='0'}" 
                                    Width="10" />

                        <StackPanel Background="Black" Opacity="0.5" VerticalAlignment="Top" Width="10"
                                    
                                    DataContext="{Binding DataContext.UnitAttackVM, RelativeSource={RelativeSource AncestorType=Window}}"
                                    Height="{Binding AttackerHitPointLoss, Converter={StaticResource HitPointToHeightConverter}, FallbackValue='0'}" >

                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Visibility" Value="Visible" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard x:Name="blink">
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" From="0.7" To="0.4" 
                                                    Duration="0:0:2" BeginTime="0:0:0"/>
                                                        <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" From="0.4" To="0.7" 
                                                    Duration="0:0:2" BeginTime="0:0:2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="blink"></StopStoryboard>
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </Grid>
                </Border>


                <StackPanel Margin="8" Grid.Column="1" Visibility="{Binding Path=CurrentUnit, Converter={StaticResource UnitToVisibilityConverter}}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <Image 
                            DataContext="{Binding CurrentUnit}"
                            Grid.Column="2"
                            Width="64"
                            Height="64"
                            Source="{Binding Type, Converter={StaticResource UnitToSourceConverter}}" />

                        <Border 
                            DataContext="{Binding CurrentUnit}"
                            Visibility="{Binding PromotionCount, Converter={StaticResource GreaterThanZeroToVisibilityConverter}, FallbackValue=Collapsed}"
                            Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0, 0, 5, 0" BorderBrush="WhiteSmoke" BorderThickness="1" Background="Black" Padding="3, 1, 3, 1">
                            <TextBlock Foreground="WhiteSmoke" Text="{Binding PromotionCount}" />
                            <Border.ToolTip>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold" FontSize="16" Margin="0, 0, 0, 6">Promotions:</TextBlock>
                                    <ItemsControl
                                    ItemsSource="{Binding Promotions}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="0, 0, 0, 4">
                                                    <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding}" />
                                                    <TextBlock Text="{Binding Converter={StaticResource PromotionToDescriptionConverter}}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Border.ToolTip>
                        </Border>

                        <StackPanel Grid.Column="0">
                            <TextBlock FontSize="20" Foreground="WhiteSmoke" DataContext="{Binding CurrentUnit}" Text="{Binding Type}" />
                            <TextBlock Foreground="WhiteSmoke" DataContext="{Binding CurrentUnit}" Text="{Binding Owner.Name}"/>
                            <TextBlock Foreground="WhiteSmoke" Text="{Binding Terrain}" />
                            <TextBlock Foreground="{Binding Improvement, Converter={StaticResource ImprovementToColorConverter}}" 
                                       Text="{Binding Improvement, Converter={StaticResource ImprovementToStringConverter}}" />
                        </StackPanel>
                    </Grid>
                    
                    <StackPanel Height="10" />
                    
                    <Grid DataContext="{Binding CurrentUnit}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}"  
                                   Grid.Row="0" Grid.Column="0" FontSize="16" Foreground="WhiteSmoke" Margin="0, 0, 5, 0">Combat Power:</TextBlock>

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}, ConverterParameter='True'}"  
                                   Grid.Row="1" Grid.Column="0" FontSize="16" Foreground="WhiteSmoke" Margin="0, 0, 5, 0">Ranged Power:</TextBlock>

                        <TextBlock Visibility="Visible"
                                   Grid.Row="2" Grid.Column="0" FontSize="16" Foreground="WhiteSmoke" Margin="0, 0, 5, 0">Moves:</TextBlock>
                        
                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}" 
                                   Grid.Row="3" Grid.Column="0" FontSize="16" Foreground="WhiteSmoke" Margin="0, 0, 5, 0">Kills:</TextBlock>

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}" 
                                   Grid.Row="0" Grid.Column="2" FontSize="16" Foreground="WhiteSmoke" Text="{Binding CombatPower}" />

                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}, ConverterParameter='True'}" 
                                   Grid.Row="1" Grid.Column="2" FontSize="16" Foreground="WhiteSmoke" Text="{Binding RangedPower}" />

                        <TextBlock 
                                   Grid.Row="2" Grid.Column="2" FontSize="16" Foreground="{Binding RemainingMoves, Converter={StaticResource MovesToColorConverter}}" Text="{Binding RemainingMoves}" />
                        
                        <TextBlock Visibility="{Binding AttackMethod, Converter={StaticResource AttackMethodToVisibilityConverter}}" 
                                   Grid.Row="3" Grid.Column="2" FontSize="16" Foreground="WhiteSmoke" Text="{Binding Kills}" />
                        
                    </Grid>
                </StackPanel>
            </Grid>
        </Border>

        <!-- status bar, bottom of screen -->
        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Background="#007ACC" TextElement.Foreground="White">
            <StackPanel Margin="5"  Orientation="Horizontal">
                <TextBlock Text="Turn " />
                <TextBlock Text="{Binding Turn, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

                <StackPanel Width="60" />

                <TextBlock Text="Treasury: " />
                <TextBlock 
                    Foreground="{Binding PlayerCivilization.Treasury, Mode=OneWay, Converter={StaticResource LessThanZeroToColorConverter}}"
                    Text="{Binding PlayerCivilization.Treasury, Mode=OneWay}" />
                <TextBlock Text=" gp " />
                <TextBlock Text=" (" />
                <TextBlock
                    Foreground="{Binding PlayerCivilization.AdjustedGoldPerTurn, Converter={StaticResource LessThanZeroToColorConverter}}"
                    Text="{Binding PlayerCivilization.AdjustedGoldPerTurn}" />
                <TextBlock Text=" per turn)" />

                <StackPanel Width="60" />

                <TextBlock Text="Military might: " />
                <TextBlock Text="{Binding PlayerCivilization.TotalCombatPower, Mode=OneWay, Converter={StaticResource TotalCombatPowerToTextConverter}}" />

                <StackPanel Width="60" />
                
                <TextBlock Text="Researching: " />
                <TextBlock Text="{Binding PlayerCivilization.ResearchTargetName}" />
                <TextBlock Text=" (" />
                <TextBlock Text="{Binding PlayerCivilization.EstimatedResearchCompletion}" />
                <TextBlock Text=" turns)" />

                <StackPanel Width="60" />

                <TextBlock Text="Population: " />
                <TextBlock Text="{Binding PlayerCivilization.Population}" />

                <StackPanel Width="60" />

                <Slider Value="1" Minimum="1" Maximum="3" x:Name="zoomSlider" Width="100">
                    
                </Slider>


            </StackPanel>
        </StackPanel>

        <!-- popup-->
        <Border
            DataContext="{Binding PopupVM}"
            Grid.ColumnSpan="5" Grid.RowSpan="5" BorderBrush="Black" 
            Visibility="{Binding IsShowing, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
            >
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.6"/>
            </Border.Background>

            <Border BorderThickness="2" BorderBrush="Black" Background="AliceBlue" Width="640" Height="190" Padding="12">
                <StackPanel>
                    <TextBlock FontSize="32" Text="{Binding Title}" />
                    
                    <StackPanel Margin="0,0,0,0" HorizontalAlignment="Left" Height="8" Width="128" Background="CornflowerBlue"></StackPanel>

                    <StackPanel Height="30" />

                    <TextBlock Text="{Binding Message}" />

                    <StackPanel Height="30" />

                    <Button Command="{Binding CloseCommand}" HorizontalAlignment="Right" Width="120" Content="Close" />
                </StackPanel>
            </Border>
        </Border>

        
        <!-- turn processing -->
        <Border Grid.ColumnSpan="5" Grid.RowSpan="5" BorderBrush="Black" 
                Visibility="{Binding IsProcessingTurn, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                >
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.5"/>
            </Border.Background>

            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontSize="32" Text="Waiting on nodes..." />
        </Border>

        <!-- fail screen -->
        <Border Grid.ColumnSpan="5" Grid.RowSpan="5" BorderBrush="Black" 
                Visibility="{Binding HasPlayerLost, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                >
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.6"/>
            </Border.Background>
            
            <Border BorderThickness="2" BorderBrush="Black" Background="AliceBlue" Width="884" Height="720">
                <StackPanel>
                    <TextBlock FontSize="32" Margin="12">YOU HAVE BEEN DEFEATED</TextBlock>
                    <StackPanel Margin="12,0,0,0" HorizontalAlignment="Left" Height="8" Width="128" Background="CornflowerBlue"></StackPanel>

                    <StackPanel Height="30" />

                    <Border BorderThickness="1" BorderBrush="Black" Width="854" Height="480">
                        <Image Source="Images/defeat.png" Width="854" Height="480" />
                    </Border>

                    <StackPanel Height="30" />

                    <ScrollViewer Margin="12, 0, 12, 0">
                        <TextBlock>
                            Your cities lie in ruins, your armies are vanquished on the field of battle.
                        </TextBlock>
                    </ScrollViewer>

                </StackPanel>
            </Border>
        </Border>




        <!-- win screen -->
        <Border Grid.ColumnSpan="5" Grid.RowSpan="5" BorderBrush="Black" 
                Visibility="{Binding HasPlayerWon, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                >
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.6"/>
            </Border.Background>

            <Border BorderThickness="2" BorderBrush="Black" Background="AliceBlue" Width="884" Height="720">
                <StackPanel>
                    <TextBlock FontSize="32" Margin="12">YOU ARE VICTORIOUS</TextBlock>
                    <StackPanel Margin="12,0,0,0" HorizontalAlignment="Left" Height="8" Width="128" Background="CornflowerBlue"></StackPanel>

                    <StackPanel Height="30" />

                    <Border BorderThickness="1" BorderBrush="Black" Width="854" Height="480">
                        <Image Source="Images/victory.png" Width="854" Height="480" />
                    </Border>

                    <StackPanel Height="30" />

                    <ScrollViewer Margin="12, 0, 12, 0">
                        <TextBlock>
                            Your enemies lay vanquished before you on the field of battle. 
                        </TextBlock>
                    </ScrollViewer>

                </StackPanel>
            </Border>
        </Border>
    </Grid>
</Window>
